{"version":3,"sources":["components/add-input.component.jsx","components/todo-item.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["AddInput","onClick","onReset","useState","addText","setAddText","errorText","className","type","onKeyDown","e","key","alert","onChange","target","value","TodoItem","text","App","toDo","setToDo","newToDo","newState","console","log","map","singleToDo","index","i","filter","removeToDo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAEe,SAASA,EAAT,GAAyC,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,QAC1C,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAY,uCAClB,OACE,sBAAKC,UAAU,aAAf,UACE,uBACEC,KAAK,OACLC,UAAW,SAACC,GACV,GAAa,SAATA,EAAEC,IAAgB,CACpB,IAAKP,EAEH,YADAQ,MAAMN,GAGRL,EAAQG,GACRC,EAAW,MAGfQ,SAAU,SAACH,GAAD,OAAOL,EAAWK,EAAEI,OAAOC,QACrCA,MAAOX,IAET,wBACEH,QAAS,WACFG,GAILH,EAAQG,GACRC,EAAW,KAJTO,MAAMN,IAHZ,iBAYA,wBAAQL,QAAS,SAACS,GAAD,OAAOR,KAAxB,2BChCS,SAASc,EAAT,GAAsC,IAAlBf,EAAiB,EAAjBA,QAASgB,EAAQ,EAARA,KAC1C,OACE,+BACGA,EACD,wBAAQhB,QAASA,EAAjB,kBCiCSiB,MAlCf,WACE,MAAwBf,mBAAS,IAAjC,mBAAOgB,EAAP,KAAaC,EAAb,KAiBA,OACE,sBAAKb,UAAU,MAAf,UACE,2CACA,cAACP,EAAD,CAAUE,QAlBd,WACEkB,EAAQ,KAiBwBnB,QAdlC,SAAiBoB,GACf,IAAMC,EAAQ,sBAAOH,GAAP,CAAaE,IAC3BD,EAAQE,GACRC,QAAQC,IAAIF,MAYV,6BACGH,EAAKM,KAAI,SAACC,EAAYC,GAAb,OACR,cAACX,EAAD,CACEC,KAAMS,EACNzB,QAAS,kBAbnB,SAAoB2B,GAClB,IAAMN,EAAWH,EAAKU,QAAO,SAACH,EAAYC,GAAb,OAAuBA,IAAUC,KAC9DR,EAAQE,GAWeQ,CAAWH,eCnBvBI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.29724f26.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nexport default function AddInput({ onClick, onReset }) {\r\n  const [addText, setAddText] = useState(\"\");\r\n  const errorText = \"Please add what you are going to do.\";\r\n  return (\r\n    <div className=\"main-input\">\r\n      <input\r\n        type=\"text\"\r\n        onKeyDown={(e) => {\r\n          if (e.key == \"Enter\") {\r\n            if (!addText) {\r\n              alert(errorText);\r\n              return;\r\n            }\r\n            onClick(addText);\r\n            setAddText(\"\");\r\n          }\r\n        }}\r\n        onChange={(e) => setAddText(e.target.value)}\r\n        value={addText}\r\n      />\r\n      <button\r\n        onClick={() => {\r\n          if (!addText) {\r\n            alert(errorText);\r\n            return;\r\n          }\r\n          onClick(addText);\r\n          setAddText(\"\");\r\n        }}\r\n      >\r\n        add\r\n      </button>\r\n      <button onClick={(e) => onReset()}>Remove All</button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function TodoItem({ onClick, text }) {\r\n  return (\r\n    <li>\r\n      {text}\r\n      <button onClick={onClick}>x</button>\r\n    </li>\r\n  );\r\n}\r\n","import { useState } from \"react\";\nimport \"./App.css\";\nimport AddInput from \"./components/add-input.component\";\nimport TodoItem from \"./components/todo-item.component\";\n\nfunction App() {\n  const [toDo, setToDo] = useState([]);\n\n  function resetToDo() {\n    setToDo([]);\n  }\n\n  function addToDo(newToDo) {\n    const newState = [...toDo, newToDo];\n    setToDo(newState);\n    console.log(newState);\n  }\n\n  function removeToDo(i) {\n    const newState = toDo.filter((singleToDo, index) => index !== i);\n    setToDo(newState);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>to-do app</h1>\n      <AddInput onReset={resetToDo} onClick={addToDo}></AddInput>\n      <ul>\n        {toDo.map((singleToDo, index) => (\n          <TodoItem\n            text={singleToDo}\n            onClick={() => removeToDo(index)}\n          ></TodoItem>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}